using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FromTheDepthsUtility.Engines
{
    public static class FuelEngineMath
    {
        // higher heat levels reduce efficiency and power
        public static float HeatFactor(float heat)
        {
            return 1f - ((heat * heat * heat) / 2f);
        }

        public static (float[], float) CoolingRate(CylinderInput[] cylinders, float h, float NumberOfRadiators = 0)
        {
            // h = heat generated by 1 fuel per second
            float radiatorCooling = 2f * (float)Math.Sqrt((NumberOfRadiators / cylinders.Length) * h);
            return (
                cylinders.Select(
                    c => (4f * h * c.Exhausts) +
                        (0.4f * h) +
                        (2 * c.Turbochargers) +
                        radiatorCooling
                ).ToArray(),
                (1f + (0.01f * (float)Math.Pow(NumberOfRadiators, 0.5)))
            );
        }

        // RPM = Relative RPM

        public static float CylinderBurnRate(float RPM, float injectors = 0, float carburetors = 0)
        {
            // Liters per second
            float BasicEngineCurve = 0.8f + (0.4f * RPM);

            if (injectors == 0 && carburetors == 0)
                return (10f * RPM) / (100f * 1.2f * BasicEngineCurve);
            else
                return ((injectors * RPM * 200f) / (100f * 1.1f * BasicEngineCurve)) +
                    (RPM * BasicEngineCurve * carburetors);
        }
    }
}
